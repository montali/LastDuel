{"label": "Ensemble", "id": 5968, "text": "mlr.classif.ranger"}
{"label": "NeuralNetwork", "id": 5860, "text": "mlr.classif.glmnet"}
{"label": "Ensemble", "id": 5906, "text": "mlr.classif.xgboost"}
{"id": 8817, "text": "sklearn.pipeline.Pipeline(columntransformer=sklearn.compose._column_transformer.ColumnTransformer(numeric=sklearn.pipeline.Pipeline(imputer=sklearn.preprocessing.imputation.Imputer,standardscaler=sklearn.preprocessing.data.StandardScaler),nominal=sklearn.pipeline.Pipeline(simpleimputer=sklearn.impute.SimpleImputer,onehotencoder=sklearn.preprocessing._encoders.OneHotEncoder)),variancethreshold=sklearn.feature_selection.variance_threshold.VarianceThreshold,svc=sklearn.svm.classes.SVC)", "label": "SVM"}
{"label": "DecisionTree", "id": 8815, "text": "sklearn.pipeline.Pipeline(columntransformer=sklearn.compose._column_transformer.ColumnTransformer(numeric=sklearn.pipeline.Pipeline(imputer=sklearn.preprocessing.imputation.Imputer,standardscaler=sklearn.preprocessing.data.StandardScaler),nominal=sklearn.pipeline.Pipeline(simpleimputer=sklearn.impute.SimpleImputer,onehotencoder=sklearn.preprocessing._encoders.OneHotEncoder)),variancethreshold=sklearn.feature_selection.variance_threshold.VarianceThreshold,decisiontreeclassifier=sklearn.tree.tree.DecisionTreeClassifier)"}
{"label": "kNearestNeighbor", "id": 5972, "text": "mlr.classif.kknn"}
{"text": "weka.MultilayerPerceptron", "id": 5920, "label": "NeuralNetwork"}
{"text": "weka.Logistic", "id": 1114, "label": "LogisticRegression"}
{"text": "weka.A2DE", "id": 1166, "label": "NaiveBayes"}
{"label": "LogisticRegression", "id": 18601, "text": "sklearn.pipeline.Pipeline(simpleimputer=sklearn.impute._base.SimpleImputer,standardscaler=sklearn.preprocessing.data.StandardScaler,logisticregression=sklearn.linear_model.logistic.LogisticRegression)"}
{"label": "DecisionTree", "id": 8774, "text": "sklearn.pipeline.Pipeline(columntransformer=sklearn.compose._column_transformer.ColumnTransformer(numeric=sklearn.pipeline.Pipeline(missingindicator=sklearn.impute.MissingIndicator,imputer=sklearn.preprocessing.imputation.Imputer,standardscaler=sklearn.preprocessing.data.StandardScaler),nominal=sklearn.pipeline.Pipeline(simpleimputer=sklearn.impute.SimpleImputer,onehotencoder=sklearn.preprocessing._encoders.OneHotEncoder)),decisiontreeclassifier=sklearn.tree.tree.DecisionTreeClassifier)"}
{"label": "Ensemble", "id": 413, "text": "weka.AdaBoostM1_LWL_DecisionStump"}
{"label": "Ensemble", "id": 8918, "text": "sklearn.pipeline.Pipeline(columntransformer=sklearn.compose._column_transformer.ColumnTransformer(numeric=sklearn.pipeline.Pipeline(imputer=sklearn.preprocessing.imputation.Imputer,standardscaler=sklearn.preprocessing.data.StandardScaler),nominal=sklearn.pipeline.Pipeline(simpleimputer=sklearn.impute.SimpleImputer,onehotencoder=sklearn.preprocessing._encoders.OneHotEncoder)),variancethreshold=sklearn.feature_selection.variance_threshold.VarianceThreshold,randomforestclassifier=sklearn.ensemble.forest.RandomForestClassifier)"}
{"label": "Ensemble", "id": 398, "text": "weka.AdaBoostM1_BFTree"}
{"label": "Ensemble", "id": 6970, "text": "sklearn.pipeline.Pipeline(imputation=openmlstudy14.preprocessing.ConditionalImputer,hotencoding=sklearn.preprocessing.data.OneHotEncoder,variencethreshold=sklearn.feature_selection.variance_threshold.VarianceThreshold,classifier=sklearn.ensemble.weight_boosting.AdaBoostClassifier(base_estimator=sklearn.tree.tree.DecisionTreeClassifier))"}
{"label": "Ensemble", "id": 8834, "text": "sklearn.pipeline.Pipeline(columntransformer=sklearn.compose._column_transformer.ColumnTransformer(numeric=sklearn.pipeline.Pipeline(imputer=sklearn.preprocessing.imputation.Imputer,standardscaler=sklearn.preprocessing.data.StandardScaler),nominal=sklearn.pipeline.Pipeline(simpleimputer=sklearn.impute.SimpleImputer,onehotencoder=sklearn.preprocessing._encoders.OneHotEncoder)),variancethreshold=sklearn.feature_selection.variance_threshold.VarianceThreshold,gradientboostingclassifier=sklearn.ensemble.gradient_boosting.GradientBoostingClassifier)"}
{"label": "SVM", "id": 16345, "text": "sklearn.pipeline.Pipeline(simpleimputer=sklearn.impute._base.SimpleImputer,standardscaler=sklearn.preprocessing.data.StandardScaler,svc=sklearn.svm.classes.SVC)"}
{"label": "kNearestNeighbor", "id": 1721, "text": "weka.IBk"}
{"label": "Ensemble", "id": 1182, "text": "weka.AdaBoostM1_DecisionStump"}
{"label": "Ensemble", "id": 19037, "text": "sklearn.pipeline.Pipeline(columntransformer=sklearn.compose._column_transformer.ColumnTransformer(simpleimputer=sklearn.impute._base.SimpleImputer,onehotencoder=sklearn.preprocessing._encoders.OneHotEncoder),gradientboostingclassifier=sklearn.ensemble._gb.GradientBoostingClassifier)"}
{"label": "LinearRegression", "id": 1112, "text": "weka.LibLINEAR"}
{"label": "SVM", "id": 8330, "text": "sklearn.pipeline.Pipeline(imputation=openmlstudy14.preprocessing.ConditionalImputer,hotencoding=sklearn.preprocessing.data.OneHotEncoder,scaling=sklearn.preprocessing.data.StandardScaler,variencethreshold=sklearn.feature_selection.variance_threshold.VarianceThreshold,classifier=sklearn.svm.classes.SVC)"}
{"label": "Ensemble", "id": 8315, "text": "sklearn.pipeline.Pipeline(imputation=hyperimp.utils.preprocessing.ConditionalImputer,hotencoding=sklearn.preprocessing.data.OneHotEncoder,variencethreshold=sklearn.feature_selection.variance_threshold.VarianceThreshold,clf=sklearn.ensemble.forest.RandomForestClassifier)"}
{"label": "Ensemble", "id": 406, "text": "weka.AdaBoostM1_JRip"}
{"label": "NeuralNetwork", "id": 4053, "text": "metasqar.deeplrn"}
{"label": "Ensemble", "id": 482, "text": "weka.MultiBoostAB_DecisionStump"}
{"label": "Ensemble", "id": 6969, "text": "sklearn.pipeline.Pipeline(imputation=openmlstudy14.preprocessing.ConditionalImputer,hotencoding=sklearn.preprocessing.data.OneHotEncoder,variencethreshold=sklearn.feature_selection.variance_threshold.VarianceThreshold,classifier=sklearn.ensemble.forest.RandomForestClassifier)"}
{"label": "Ensemble", "id": 527, "text": "weka.Bagging_LMT"}
{"label": "Ensemble", "id": 531, "text": "weka.Bagging_OneR"}
{"label": "Ensemble", "id": 7096, "text": "sklearn.model_selection._search.RandomizedSearchCV(estimator=sklearn.pipeline.Pipeline(imputation=openmlstudy14.preprocessing.ConditionalImputer,hotencoding=sklearn.preprocessing.data.OneHotEncoder,variencethreshold=sklearn.feature_selection.variance_threshold.VarianceThreshold,classifier=sklearn.ensemble.forest.RandomForestClassifier))"}
{"label": "Ensemble", "id": 611, "text": "weka.MultiBoostAB_ADTree"}
{"label": "NaiveBayes", "id": 7189, "text": "mlr.classif.rpart.imputed.dummied.preproc"}
{"label": "Ensemble", "id": 420, "text": "weka.AdaBoostM1_RandomTree"}
{"label": "Ensemble", "id": 8793, "text": "sklearn.pipeline.Pipeline(columntransformer=sklearn.compose._column_transformer.ColumnTransformer(numeric=sklearn.pipeline.Pipeline(missingindicator=sklearn.impute.MissingIndicator,imputer=sklearn.preprocessing.imputation.Imputer,standardscaler=sklearn.preprocessing.data.StandardScaler),nominal=sklearn.pipeline.Pipeline(simpleimputer=sklearn.impute.SimpleImputer,onehotencoder=sklearn.preprocessing._encoders.OneHotEncoder)),gradientboostingclassifier=sklearn.ensemble.gradient_boosting.GradientBoostingClassifier)"}
{"label": "Ensemble", "id": 534, "text": "weka.Bagging_SMO_PolyKernel"}
{"label": "LogisticRegression", "id": 18598, "text": "sklearn.pipeline.Pipeline(simpleimputer=sklearn.impute._base.SimpleImputer,onehotencoder=sklearn.preprocessing._encoders.OneHotEncoder,logisticregression=sklearn.linear_model._logistic.LogisticRegression)"}
{"label": "NeuralNetwork", "id": 4056, "text": "mlr.regr.rvm"}
{"label": "Ensemble", "id": 532, "text": "weka.Bagging_RandomForest"}
{"label": "SVM", "id": 5891, "text": "mlr.classif.svm"}
{"label": "Ensemble", "id": 12736, "text": "sklearn.pipeline.Pipeline(simpleimputer=sklearn.impute._base.SimpleImputer,histgradientboostingclassifier=sklearn.ensemble._hist_gradient_boosting.gradient_boosting.HistGradientBoostingClassifier)"}
{"label": "LinearRegression", "id": 4063, "text": "mlr.regr.pcr"}
{"label": "LinearRegression", "id": 4065, "text": "mlr.regr.lm"}
{"label": "Ensemble", "id": 17652, "text": "sklearn.pipeline.Pipeline(simpleimputer=sklearn.impute._base.SimpleImputer,standardscaler=sklearn.preprocessing.data.StandardScaler,randomforestclassifier=sklearn.ensemble.forest.RandomForestClassifier)"}
{"label": "SVM", "id": 72, "text": "weka.SMO_RBFKernel"}
{"label": "Ensemble", "id": 8887, "text": "sklearn.ensemble.forest.RandomForestClassifier"}
{"label": "NeuralNetwork", "id": 1174, "text": "weka.KernelLogisticRegression_RBFKernel"}
{"label": "NeuralNetwork", "id": 60, "text": "weka.J48"}
{"label": "Ensemble", "id": 8795, "text": "sklearn.pipeline.Pipeline(columntransformer=sklearn.compose._column_transformer.ColumnTransformer(numeric=sklearn.pipeline.Pipeline(missingindicator=sklearn.impute.MissingIndicator,imputer=sklearn.preprocessing.imputation.Imputer,standardscaler=sklearn.preprocessing.data.StandardScaler),nominal=sklearn.pipeline.Pipeline(simpleimputer=sklearn.impute.SimpleImputer,onehotencoder=sklearn.preprocessing._encoders.OneHotEncoder)),randomforestclassifier=sklearn.ensemble.forest.RandomForestClassifier)"}
{"label": "NeuralNetwork", "id": 1194, "text": "weka.RandomSubSpace_REPTree"}
{"label": "NeuralNetwork", "id": 1817, "text": "classif.avNNet"}
{"label": "kNearestNeighbor", "id": 1080, "text": "weka.NBTree"}
{"label": "Ensemble", "id": 422, "text": "weka.AdaBoostM1_REPTree"}
{"label": "DecisionTree", "id": 5624, "text": "mlr.classif.rpart"}
{"label": "Ensemble", "id": 417, "text": "weka.AdaBoostM1_NaiveBayes"}
{"label": "Ensemble", "id": 1822, "text": "classif.cforest"}
{"label": "Ensemble", "id": 8885, "text": "sklearn.pipeline.Pipeline(imputation=preprocessing.ConditionalImputer2,catencoding=preprocessing.MultiLabelEncoder,variencethreshold=sklearn.feature_selection.variance_threshold.VarianceThreshold,clf=sklearn.ensemble.forest.RandomForestClassifier)"}
{"label": "NeuralNetwork", "id": 8788, "text": "sklearn.pipeline.Pipeline(columntransformer=sklearn.compose._column_transformer.ColumnTransformer(numeric=sklearn.pipeline.Pipeline(missingindicator=sklearn.impute.MissingIndicator,imputer=sklearn.preprocessing.imputation.Imputer,standardscaler=sklearn.preprocessing.data.StandardScaler),nominal=sklearn.pipeline.Pipeline(simpleimputer=sklearn.impute.SimpleImputer,onehotencoder=sklearn.preprocessing._encoders.OneHotEncoder)),mlpclassifier=sklearn.neural_network.multilayer_perceptron.MLPClassifier)"}
{"label": "Ensemble", "id": 4059, "text": "mlr.regr.randomForest"}
{"label": "NaiveBayes", "id": 1168, "text": "weka.BayesNet_K2"}
{"label": "SVM", "id": 4006, "text": "weka.LibSVM"}
{"label": "Ensemble", "id": 1196, "text": "weka.RotationForest_PrincipalComponents_J48"}
{"label": "NaiveBayes", "id": 7190, "text": "mlr.classif.RRF.imputed.dummied.preproc"}
{"label": "Ensemble", "id": 423, "text": "weka.AdaBoostM1_SMO_PolyKernel"}
{"label": "Ensemble", "id": 17649, "text": "sklearn.pipeline.Pipeline(simpleimputer=sklearn.impute._base.SimpleImputer,onehotencoder=sklearn.preprocessing._encoders.OneHotEncoder,randomforestclassifier=sklearn.ensemble.forest.RandomForestClassifier)"}
{"label": "Ensemble", "id": 8365, "text": "sklearn.model_selection._search.RandomizedSearchCV(estimator=sklearn.pipeline.Pipeline(imputation=hyperimp.utils.preprocessing.ConditionalImputer,hotencoding=sklearn.preprocessing.data.OneHotEncoder,variencethreshold=sklearn.feature_selection.variance_threshold.VarianceThreshold,clf=sklearn.ensemble.forest.RandomForestClassifier))"}
{"label": "LogisticRegression", "id": 18608, "text": "sklearn.pipeline.Pipeline(simpleimputer=sklearn.impute._base.SimpleImputer,onehotencoder=sklearn.preprocessing._encoders.OneHotEncoder,logisticregression=sklearn.linear_model.logistic.LogisticRegression)"}
{"label": "NaiveBayes", "id": 1244, "text": "weka.FilteredClassifier_Discretize_J48"}
{"label": "Ensemble", "id": 1195, "text": "weka.RealAdaBoost_DecisionStump"}
{"label": "Ensemble", "id": 523, "text": "weka.Bagging_J48"}
{"label": "Ensemble", "id": 411, "text": "weka.AdaBoostM1_LMT"}
{"label": "NaiveBayes", "id": 4825, "text": "moa.BlastDecayed"}
{"label": "Ensemble", "id": 528, "text": "weka.Bagging_LWL_DecisionStump"}
{"label": "LinearRegression", "id": 4057, "text": "mlr.regr.rsm"}
{"label": "Ensemble", "id": 378, "text": "weka.Bagging_REPTree"}
